3.1 在线词典

* 功能说明


>客户端启动后即进入一级界面，包含如下功能：登录    注册    退出
	* 退出后即退出该软件
	* 登录成功即进入二级界面，失败回到一级界面
	* 注册成功可以回到一级界面继续登录，也可以直接用注册用户进入二级界面

* 选择注销则回到一级界面
* 查单词：循环输入单词，得到单词解释，输入特殊符号退出单词查询状态
* 历史记录：查询当前用户的查词记录，要求记录包含name   word   time。前10条均可


>用户可以登录和注册

* 登录凭借用户名和密码登录
* 注册要求用户必须填写用户名，密码，其他内容自定
* 用户名要求不能重复
* 要求用户信息能够长期保存
```
可以通过基本的图形界面print以提示客户端输入。
* 程序分为服务端和客户端两部分
* 客户端通过print打印简单界面输入命令发起请求
* 服务端主要负责逻辑数据处理
* 启动服务端后应该能满足多个客户端同时操作

1、需求功能：
    1.登录、注册、用户信息长期保存

2、技术分析：
    客户端打印一级界面(登录(查单词、查询单词记录、注销)    注册    退出)
    服务端
    （数据处理 ：数据库处理
      逻辑处理 ：server端
    网络并发模型
       多进程tcp网络并发模型


3、功能模块 和封装
    mvc 架构
    请求展示    逻辑处理    数据处理
    dict_client.py  发送请求  接收结果      对于结果展示
    dict_server.py  处理请求  提取数据处理结果   数据组织 响应请求
    dict_data.py    获取需求  处理数据   提供处理后的数据
4、通讯协议设定
        #数据参量 指的是请求类型 请求的内容
                    请求类型  数据参量
        登录          L       username
        注册          R       password
        查询          Q       word
        历史记录       H       username
        退出          E

5、具体的模块逻辑
    多进程网络框架搭建
        tcp网络并发模型：
         为每个连接设置一个子进程，如果连接断开，则销毁子进程
        建立tcp套接字，
        绑定连接
        设置监听队列
        父进程
            循环
                设置连接套接字
        子进程，针对每个套接字设设置循环收发消息






    登录
        客户端：输入用户信息，
               将用户信息发送给服务端
               等待消息：
                        ok 登录成功，跳入二级界面
                        fall ，用户名或者密码输入错误，请重新输入
        服务端：接受用户消息
               调用数据库中信息
                    如果数据消息返回ture 客户端 ok
                    如果数据库消息返回flase 客户端 fall
       数据库端：
                获取用户消息
                如果查询到结果
                    返回true





    注册
         客户端：输入用户信息
                将用户信息发送给服务端
                等待消息
                    如果ok 注册成功
                    如果fall  用户已存在
         服务端：接受用户信息
                调用数据库中信息，
                    如果数据库消息返回true 客户端 fall
                    如果数据库消息返回FLASE 客户端 ok
         数据库端：获取用户信息
                查询数据库消息，，返回一条查询结果，如果查询到
                返回true
                如果没有查询到，
                返回flase
                插入数据
    退出
        客户端：向服务端发送结果“e“
                关闭连接
        服务端：
               接受到客户端发送的结果
               退出循环
               关闭游标对象
               关闭连接套接字

    查询单词
        客户端：输入单词
               向服务端发送请求
               接收服务端请求
        服务端：
              接收用户数据消息
              调用数据库中消息
              将接手到的数据发送给客户端
        数据库端：
            获取用户信息
            查询数据库中的数据
            将数据库中的信息发送给服务端

    查询历史记录(每个用户都可以查询自己数据
         客户端：
               向服务端发送请求  msg = "H "+name
               接收服务端请求
         服务端：接收用户数据请求
                调用数据库中消息
                将接受到的用户数据发送给客户端

         数据库端：获取用户信息
                 查询数据库中的数据
                 将数据库中的信息发送给服务端








笔记：
1.  option = input("请选择命令：")
    cmd = re.sub("\D", "", option)
    表示输入的命令如果有其他字符或者是空格是全部被数字代替
2.注册时，如果需要将数据储存到数据库当中,想要在前端查询
用户名是否已经存在，在数据库当中获得查询结果，如果结果获得查询结果就将结果返回
服务端获得查询结果后，判断真正的需求是什么，根据需求返回结果
3.调用函数传参的目的是：
函数需要啥功能，就将已有的信息传递过去，使这个功能能够正确的被执行。
如：这个函数需要发送请求，tcp套接字就将连接套接字中客户端连接套接字 connfd传过去
udp就将udp(sock)传递过去
4.抛出异常时，如果语句没有异常时，else：需要放到和try同一层级当中
而不是放在内部，内部表示try语句一直在判断是否有异常，而没有作出判断

5

